syntax = "proto3";

package basket;

option go_package = "/;basket";

service BasketService {
    rpc Put (PutRequest) returns (UUID);
    rpc GetBasket (GetBasketRequest) returns (Basket);
    rpc HasBasket (HasBasketRequest) returns (Exist);
    rpc GetBasketByUser (GetBasketByUserRequest) returns (Basket);

    rpc FindItem (FindItemRequest) returns (Items);
    rpc Add (AddRequest) returns (UUID);
    rpc RemoveItem (RemoveItemRequest) returns (UUID);
    rpc RemoveBasket (RemoveBasketRequest) returns (UUID);

    rpc Update (UpdateRequest) returns (UUID);
}

// Entities:
message Basket {
    uint32 pages_count = 1;
    uint32 total_items = 2;
    uint32 per_page = 3;

    string id = 4;
    int64 created_at = 5;
    int64 updated_at = 6;
    string user_id = 7;

    repeated Item items = 8;

}

message Item {
    string id = 1;
    int64 created_at = 2;
    int64 updated_at = 3;
    double price = 4;
    string basket_id = 5;
    string good_id = 6;
    int64 quantity = 7;
}

message Items {
    uint32 pages_count = 1;
    uint32 total_items = 2;
    uint32 per_page = 3;

    repeated Item items = 4;
}

message GetBasketByUserRequest {
    string user_id = 1;
}

message HasBasketRequest {
    string basket_id = 1; //not required
    string user_id = 2; //not required
}

message GetBasketRequest {
    PaginationRequest pagination = 1;
    string basket_id = 2;
}

message PutRequest {
    string basket_id = 1;
    double price = 2;
    string good_id = 3;
    int64 quantity = 4;
}

message FindItemRequest {
    PaginationRequest pagination = 1;
    string basket_id = 2;
    string good_id = 3;
}

message AddRequest {
    string user_id = 1;
}

message RemoveItemRequest {
    string user_id = 1;
    string item_id = 2;
}

message RemoveBasketRequest {
    string basket_id = 1;
}

message UpdateRequest {
    string user_id = 1;
    string basket_item_id = 2;
    int64 quantity = 3;
}
// Base
message UUID {
    string value = 1;
}

message Empty {
}

message Exist {
    bool value = 1;
}

message PaginationRequest {
    uint32 page = 1;
    int32 limit = 2;
    uint32 offset = 3;
}
